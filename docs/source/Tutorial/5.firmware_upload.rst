烧录固件
==========

本章节将指导您将小智AI聊天机器人固件烧录到ESP32S3模块中。

连接ESP32S3
-----------

在开始烧录之前，请按照以下步骤连接ESP32S3：

1. 确保您已完成硬件组装（参考"硬件介绍连接"章节）

2. 使用USB数据线将ESP32S3模块连接到计算机

3. 确认计算机已识别设备：
   
   * Windows用户：打开设备管理器，查看"端口(COM和LPT)"下是否出现新的COM端口
   * Mac用户：打开终端，输入`ls /dev/cu.*`查看是否有新设备
   * Linux用户：打开终端，输入`ls /dev/ttyUSB*`查看是否有新设备

4. 记录串口号（如COM3、/dev/cu.SLAB_USBtoUART等），后续烧录时需要用到

进入下载模式
-----------

ESP32S3需要进入下载模式才能烧录固件：

1. 按住ESP32S3模块上的BOOT按钮（有些模块标记为IO0）

2. 按下并释放RST（复位）按钮

3. 释放BOOT按钮

.. note::
   如果您的ESP32S3模块没有物理BOOT或RST按钮，可以通过在电路中添加按钮来实现，或参考模块说明书了解其他进入下载模式的方法。

烧录步骤
--------

**使用Flash Download Tool (Windows)**

1. 打开之前下载的Flash Download Tool软件

2. 选择"ESP32S3"芯片类型

3. 设置烧录参数：
   
   * 选择正确的COM端口
   * 波特率设置为921600
   * SPI SPEED选择40MHz
   * SPI MODE选择DIO
   * FLASH SIZE选择根据您ESP32S3模块的实际flash大小（通常为4MB、8MB或16MB）

4. 添加固件文件：
   
   * 地址：0x0
   * 文件路径：选择您之前下载的小智固件文件（如`xiaozhi_esp32s3_vX.X.X.bin`）

5. 点击"开始"按钮开始烧录

.. figure:: img/flash_download_tool.png
   :alt: Flash下载工具界面
   :align: center

   Flash Download Tool烧录界面

**使用esptool.py (Mac/Linux)**

1. 打开终端

2. 进入固件所在目录

3. 执行以下命令烧录固件：

   .. code-block:: bash

      esptool.py --chip esp32s3 --port [PORT] --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 40m --flash_size detect 0x0 xiaozhi_esp32s3_vX.X.X.bin

   将[PORT]替换为您的设备端口（如/dev/cu.SLAB_USBtoUART或/dev/ttyUSB0），将xiaozhi_esp32s3_vX.X.X.bin替换为您下载的固件文件名

**分区表烧录（可选）**

如果需要烧录特定的分区表，可以选择小智项目中提供的以下分区表之一：

* partitions.csv（默认，16M Flash）
* partitions_4M.csv（适用于4M Flash模块）
* partitions_8M.csv（适用于8M Flash模块）
* partitions_32M_sensecap.csv（适用于SenseCAP Watcher等32M Flash模块）

执行以下命令烧录分区表：

.. code-block:: bash

   esptool.py --chip esp32s3 --port [PORT] --baud 921600 write_flash 0x8000 build/partition_table/partition-table.bin

验证烧录结果
-----------

完成烧录后，可以通过以下步骤验证：

1. 重置ESP32S3模块（按下RST按钮或重新插拔USB连接）

2. 观察模块上的指示灯：
   
   * 电源指示灯应该常亮
   * 工作指示灯应该间隔闪烁，表示程序正在运行

3. 如果OLED显示模块连接正确，应该显示启动信息和设备状态：
   
   * 启动时会显示"小智启动中..."
   * 然后显示Wi-Fi连接提示信息

4. 此时，您的ESP32S3 AI聊天机器人已经初步准备好，接下来需要进行后台配置 